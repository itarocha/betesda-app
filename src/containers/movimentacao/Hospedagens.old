<template>
  <div>
    <el-container v-if="state == 'browse'">
      <el-header>
        <el-row type="flex" style="line-height:1em;">
          <el-button type="primary" @click="getDadosSemanaAnterior(dados.dataIni)">Semana Anterior</el-button>
          <el-button type="primary" @click="getDadosHoje()">Hoje</el-button>
          <el-button type="primary" @click="getDadosProximaSemana(dados.dataFim)">Semana Seguinte</el-button>

          <div class="block-date">
            <span style="width:200px; text-align:right; margin-right: 10px; padding-top:10px;">Data Selecionada:</span>
            <el-date-picker v-model="dataAtual" type="date" format="dd/MM/yyyy" value-format="yyyy-MM-dd" style="width: 100%;" ></el-date-picker>
          </div>
        </el-row>

      </el-header>
      <el-main>
        <el-row type="flex" :gutter="10">
          <el-col :sm="24" :md="24" :lg="24">

            <el-tabs type="border-card" v-model="activeTabName" @tab-click="handleTabClick">
              <el-tab-pane label="Mapa de Hospedagem" name="mapa">

                <el-container style="margin:2px;">
                  <el-container :style="styleContainerMapa">

                    <el-header style="line-height:20px; height:54px;">
                      <el-row type="flex">
                        <el-col>
                          <div class="thebox p4 laranja h60">
                            <span style="font-size: 12pt; align:center;">Quarto/</span>
                            <span style="font-size: 12pt; align:center;">Leito</span>
                          </div>
                        </el-col>

                        <el-col v-for="(dia, index) in dados.dias" :key="index" 
                          :class="{'white-text': isDataAtual(dia), 'teal-darken-2':isDataAtual(dia), 'amber-lighten-4':!isDataAtual(dia) }">
                          <div class="thebox p4 h60 " style="cursor:pointer; line-height:8px" @click="selecionarDia(dia, index)">
                            <p style="font-size: 9pt">{{diaSemana(dia)}}</p>
                            <p style="font-size: 12pt">{{formatDate(dia,'DD/MMM')}}</p>
                          </div>
                        </el-col>
                        <div class="w15"></div>
                      </el-row>                      
                    </el-header>
                    
                    <el-main style="padding-top:0px;">

                      <div :style="styleGrid" class="scroll-y p0">
                        <el-row type="flex" v-for="(celula, index) in dados.leitos" :key="index">
                          <el-col>
                            <div class="thebox p4 laranja hleito" :style="{height:calcularAlturaLeito(index)}">
                              <center v-if="celula.quartoNumero != '9999'">{{celula.quartoNumero}}-{{celula.leitoNumero}}</center>
                              <center v-if="celula.quartoNumero == '9999'">Parcial</center>
                            </div>
                          </el-col>

                          <el-col sm12 v-for="(cell, indice) in dados.dias" :key="indice" style="background:#f5f5f5;" :class="{'grey-lighten-2':isIndiceDataAtual(indice)}">
                            <div class="thebox hleito" v-if="celula.hospedagens.length == 0"></div>
                            <div class="thebox hleito" v-for="(hospedagem, hIdx) in celula.hospedagens" :key="hIdx">

                            <el-popover
                                placement="top-start"
                                width="300"
                                :title="hospedagem.dias[indice].identificador"
                                trigger="hover"
                                :open-delay="1000"
                                :content="getNome(hospedagem.dias[indice].identificador, true)">

                                <div slot="reference" :class="hospedagemClass(hospedagem.dias[indice].identificador, hospedagem.dias[indice].classe, hospedagem.dias[indice])" 
                                      v-if="hospedagem.dias[indice].identificador != '0'"
                                      :style="{backgroundColor: colorStatus(hospedagem.dias[indice].identificador)}"
                                      @click="showHospedagemInfoByIdentificador(hospedagem.dias[indice].identificador)">
                                  <div class="chip" v-if="hospedagem.dias[indice].firstIndex">{{getNome(hospedagem.dias[indice].identificador)}}</div>
                                </div>
                            </el-popover>                                

                            </div>
                          </el-col>
                        </el-row>
                      </div>

                    </el-main>
                  </el-container>
                </el-container>
              </el-tab-pane>

              <el-tab-pane label="Hóspedes na Semana" name="hospedes">
                <el-row type="flex" justify="center" align="middle">
                  <el-col :sm="24" :md="24" :lg="24">
                    <el-table :data="pessoas" 
                       style="width: 100%" border size="small" :default-sort="{prop: 'pessoaNome', order: 'ascending'}"
                      :height="tableHeight"
                      :row-class-name="tableRowClassName">

                      <el-table-column fixed prop="pessoaNome" label="Nome" width="250" sortable></el-table-column>

                      <el-table-column prop="pessoaCidadeUfOrigem" label="Cidade Origem" width="200" sortable></el-table-column>

                      <el-table-column prop="leitoDataEntrada" :formatter="fmtDate" label="Entrada" width="120" header-align="left" sortable></el-table-column>
                      <el-table-column prop="leitoDataSaida" :formatter="fmtDate" label="Saída" width="120" class-name="wordwrap" sortable></el-table-column>

                      <el-table-column prop="utilizacao" label="Utilização" width="120" sortable></el-table-column>
                      <el-table-column prop="leitoId" :formatter="fmtLeito" width="140" label="Quarto-Leito" sortable></el-table-column>
                      <el-table-column prop="destinacaoHospedagemDescricao" width="120" label="Destinação" sortable></el-table-column>

                      <el-table-column prop="statusHospedagem" label="Situação" width="120" sortable></el-table-column>

                      <el-table-column prop="dataEntrada" :formatter="fmtDate" label="Hpd.Início" width="120" header-align="left" sortable></el-table-column>
                      <el-table-column prop="dataPrevistaSaida" :formatter="fmtDate" label="Prev. Saída" width="120" class-name="wordwrap" sortable></el-table-column>
                      <el-table-column prop="dataEfetivaSaida" :formatter="fmtDate" label="Hpd.Saída" width="120" sortable></el-table-column>

                      <el-table-column header-align="left" align="right" prop="id" label="CODMOV" width="100" sortable></el-table-column>
                      <el-table-column header-align="left" align="right" prop="hospedagemId" label="CODHPD" width="100" sortable></el-table-column>
                      <el-table-column header-align="left" align="right" prop="pessoaId" label="CODPES" width="100" sortable></el-table-column>

                      <el-table-column label="Ações" fixed="right" align="center" width="120">
                        <template slot-scope="scope">
                          
                          <el-tooltip content="Ver Detalhes" placement="bottom" :open-delay="300">
                            <el-button type="primary" plain size="mini" circle @click="showHospedagemInfo(scope.row.hospedagemId)">
                              <i class="fas fa-info"></i>
                            </el-button>
                          </el-tooltip>

                          <el-tooltip content="Editar Pessoa" placement="bottom" :open-delay="300">
                            <el-button type="primary" plain size="mini" circle @click="handleEditPessoa(scope.row.pessoaId)">
                              <i class="fas fa-pencil-alt"></i>
                            </el-button>
                          </el-tooltip>

                        </template>
                      </el-table-column>
                    </el-table>
                  </el-col>
                </el-row>
              </el-tab-pane>

              <el-tab-pane label="Hóspedes por Cidade de Origem" name="cidades">
                  <el-container :style="styleContainerMapa">
                    <el-main style="padding-top:0px;">          
                        <el-collapse accordion>
                          <el-collapse-item :title="cidade.nome" v-for="(cidade, index) in cidades" :key="index">

                            <div class="flex-container wrap">
                              <el-card class="flex-item" v-for="(hospedagem, idx) in cidade.hospedagens" :key="idx" shadow="never" style="padding:5px; width:250px; line-height:1.5em;" 
                              :style="{backgroundColor: colorStatusItem(hospedagem.statusHospedagem)}"
                              >
                                <div style="font-weight:bold; font-size:1.1em;">{{hospedagem.pessoaNome}}

                                  <el-tooltip content="Editar" placement="bottom" :open-delay="toolTipDelay">
                                    <el-button type="primary" plain size="mini" circle @click="handleEditPessoa(hospedagem.pessoaId)">
                                      <i class="fas fa-pencil-alt"></i>
                                    </el-button>
                                  </el-tooltip>

                                </div>
                                <div>Utilização: <span style="font-weight:bold;">{{hospedagem.utilizacao}}</span>
                                  <span v-if="hospedagem.utilizacao == 'TOTAL'">Leito: <span style="font-weight:bold;">{{hospedagem.quartoNumero}}-{{hospedagem.leitoNumero}}</span></span> 
                                </div>                      
                                <div>Status: <span style="font-weight:bold;">{{hospedagem.statusHospedagem}}</span>
                                
                                  <el-tooltip content="Ver Detalhes" placement="bottom" :open-delay="300">
                                    <el-button type="primary" plain size="mini" circle @click="showHospedagemInfo(hospedagem.hospedagemId)">
                                      <i class="fas fa-info"></i>
                                    </el-button>
                                  </el-tooltip>
                          
                                </div>                      
                              </el-card>
                            </div>
                            
                          </el-collapse-item>
                        </el-collapse>  
                    </el-main>  
                </el-container>  
              </el-tab-pane>

              <el-tab-pane label="Quadro de Hospedagens" name="quadro">
                  <el-container :style="styleContainerMapa">

                    <el-header style="line-height:20px; height:54px;">
                      <el-row type="flex">
                        <!--
                        <el-col>
                          <div class="thebox p4 laranja h60">
                            <span style="font-size: 12pt; align:center;">Quarto/</span>
                            <span style="font-size: 12pt; align:center;">Leito</span>
                          </div>
                        </el-col>
                        -->
                        <el-col v-for="(dia, index) in dados.dias" :key="index" 
                          :class="{'white-text': isDataAtual(dia), 'teal-darken-2':isDataAtual(dia), 'amber-lighten-4':!isDataAtual(dia) }">
                          <div class="thebox p4 h60 " style="cursor:pointer; line-height:8px; text-align:center; font-size: 10pt;"  @click="selecionarDia(dia, index)">
                            <p>{{diaSemana(dia)}}</p>
                            <p>{{formatDate(dia,'DD/MMM')}}</p>
                          </div>
                        </el-col>
                        <!--<div class="w15"></div>-->
                      </el-row>                      
                    </el-header>


                    <el-main style="padding-top:10px;">

                      <el-col :sm="10" :md="10" :lg="10">

                        <el-row type="flex" v-for="(quarto, index) in quadro.quartos" :key="index">
                          <!--
                          <el-col>
                            <div class="thebox hleito laranja" style="text-align:center;">
                              {{quarto.numero}}
                            </div>
                          </el-col>
                          -->

                          <el-col v-for="(leito, lid) in quarto.leitos" :key="lid">
                            <div v-if="leito.id != 0" :class="quadroClass(0, index, lid)"  style="text-align:center; cursor:pointer;" @click="getHospedagensByLeitoId(leito.id)">
                              {{quarto.numero}}-{{leito.numero}}
                            </div>
                            <div class="thebox-circular cinza" v-if="leito.id == 0">
                              
                            </div>
                          </el-col>
                        </el-row>
                      </el-col>
                      <el-col :sm="14" :md="14" :lg="14">
                          <div class="subtitulo bg-purple">Quarto {{quadroQuartoNumero}} Leito {{quadroLeitoNumero}}</div>

                          <div class="flex-container wrap">
                            <el-card class="flex-item" v-for="(hospedagem, idx) in hospedagensQuadro" :key="idx" shadow="never" style="font-size:10pt; padding:5px; width:250px; line-height:1.5em;" 
                            :style="{backgroundColor: colorStatusItem(hospedagem.statusHospedagem)}"
                            >
                              <div style="font-weight:bold; font-size:1.1em;">{{hospedagem.pessoaNome}}

                                <el-tooltip content="Editar" placement="bottom" :open-delay="toolTipDelay">
                                  <el-button type="primary" plain size="mini" circle @click="handleEditPessoa(hospedagem.pessoaId)">
                                    <i class="fas fa-pencil-alt"></i>
                                  </el-button>
                                </el-tooltip>

                              </div>
                              <div>Utilização: <span style="font-weight:bold;">{{hospedagem.utilizacao}}</span>
                                <span v-if="hospedagem.utilizacao == 'TOTAL'">Leito: <span style="font-weight:bold;">{{hospedagem.quartoNumero}}-{{hospedagem.leitoNumero}}</span></span> 
                              </div>                      
                              <div>Status: <span style="font-weight:bold;">{{hospedagem.statusHospedagem}}</span>
                              
                                <el-tooltip content="Ver Detalhes" placement="bottom" :open-delay="300">
                                  <el-button type="primary" plain size="mini" circle @click="showHospedagemInfo(hospedagem.hospedagemId)">
                                    <i class="fas fa-info"></i>
                                  </el-button>
                                </el-tooltip>
                        
                              </div>                      
                            </el-card>
                          </div>

                      </el-col>


                    </el-main>  
                </el-container>  
              </el-tab-pane>

            </el-tabs>

          </el-col>
        </el-row>
      </el-main>
    </el-container>

    <tela-hospedagem v-if="state=='info'" @close="onCloseInfo" :id="hospedagemSelecionada"></tela-hospedagem>


    <div>
      <el-dialog title="Detalhes da Pessoa" :visible.sync="editPessoa" width="800px">
        <el-row type="flex">
          <el-col>
            <frame-pessoa :id="pessoaId" :canSelecionar="false" @cancel="onCancelPessoa" @save="onSavePessoa"></frame-pessoa>      
          </el-col>
        </el-row>
      </el-dialog>
    </div>

  </div>

</template>

<script>
  import TelaHospedagem from "../hpd/TelaHospedagem.vue"
  import FramePessoa from "../cadastros/FramePessoa"


export default {
  name: 'Hospedagens',

  components: {
    TelaHospedagem,
    FramePessoa
	},

  created(){
  },

  mounted(){
    this.$store.dispatch('setAcao','Hospedagens')

    this.windowHeight = window.innerHeight

    this.$nextTick(() => {
      window.addEventListener('resize', () => {
        this.windowHeight = window.innerHeight
        this.tableHeight = window.innerHeight - 300
      })
    })

  },


  data: () =>({

    dados: [],

    erros: [],

    activeTabName: 'mapa',

    showTelaHospedagem : false,
    state : "browse",
    hospedagemSelecionada : null,


    windowHeight: 0,
    styleGrid : 'max-height: 337px',
    styleContainerMapa : 'height:300px',
    
    tableHeight : window.innerHeight - 300,

    txt : '???',
    editPessoa : false,
    pessoaId : 0,
    dataAtual: null,
    
    //diaIndex representa o índice do dia clicado
    diaIndex: 0,
    quadroQuartoNumero : null,
    quadroLeitoNumero : null,

    form: {
      dataBase: null
    },
    dados: [],
    pessoas:[],
    cidades:[],
    quadro:[],
    hospedagensQuadro: [],

    dadosPlanilhaGeral:[],
    dadosRankingCidades:[],
    dadosRankingEncaminhamentos:[],

		qtdLeitosTotais : 0,
		qtdLeitosOcupados : 0,
    qtdLeitosLivres : 0,

		qtdTotais : 0,
		qtdVencidos : 0,
		qtdPendentes : 0,
		qtdEncerrados : 0,

		qtdParciaisTotais : 0,
		qtdParciaisVencidos : 0,
		qtdParciaisPendentes : 0,
		qtdParciaisEncerrados : 0,

    colorCache: {},

    toolTipDelay: 500,

			showDate: null, 
			message: "",
			startingDayOfWeek: 0,
			disablePast: false,
			disableFuture: false,
			displayPeriodUom: "month",
			displayPeriodCount: 1,
			showEventTimes: true,
			newEventTitle: "",
			newEventStartDate: "",
			newEventEndDate: "",
			useDefaultTheme: true,
			useHolidayTheme: true,
			useTodayIcons: false,    

  }),

  watch: {

    dataAtual(){
      this.hospedagensQuadro = []
      this.quadroQuartoNumero = null
      this.quadroLeitoNumero = null

      var d = moment(this.dataAtual).toDate()
      this.diaIndex = petraDateTime.getIndiceData(this.dataAtual)
      //console.log("diaIndex = " + this.diaIndex)

      this.setShowDate(d)
      this.getDadosSemanaAtual()
      this.showEstatisticas()
    },

    estatisticaLeitos(){
      this.showEstatisticas()
    },

    windowHeight(newHeight, oldHeight) {
      this.txt = `mudou de ${oldHeight} para ${newHeight}`
      this.styleGrid = `max-height: ${newHeight - 272}px`
      this.styleContainerMapa = `height: ${newHeight-270}px`
      this.tableHeight = `${newHeight-270}`
    }    
  },

  created(){
    this.dataAtual = petraDateTime.hoje()
  },

  computed: {

    estatisticaLeitos(){
      return this.dados.qtdLeitos
    },

    imageHeight () {
      switch (this.$vuetify.breakpoint.name) {
        case 'xs': return '220px - xs'
        case 'sm': return '400px - sm'
        case 'md': return '500px - md'
        case 'lg': return '600px - lg'
        case 'xl': return '800px - xl' 
      }
    },

    alturaGrid () {
      switch (this.$vuetify.breakpoint.name) {
        case 'xs': return 'max-height: 337px'
        case 'sm': return 'max-height: 337px'
        case 'md': return 'max-height: 337px'
        
        case 'lg': return 'max-height: 337px'
        case 'xl': return 'max-height: 673px' //613
      }
    },
    
		userLocale() {
			return this.getDefaultBrowserLocale
		},
		dayNames() {
			return this.getFormattedWeekdayNames(this.userLocale, "long", 0)
		},
		themeClasses() {
			return {
				"theme-default": this.useDefaultTheme,
				"holiday-us-traditional": this.useHolidayTheme,
				"holiday-us-official": this.useHolidayTheme,
			}
		},
  },

  methods: {

    handleTabClick(tab, event) {
    },

    handleEditPessoa(id) {
      this.pessoaId = id
      this.editPessoa = true;
    },

    onCancelPessoa(id) {
      this.pessoaId = null
      this.editPessoa = false
      //this.doGetAll()
    },

    onSavePessoa(id) {
      this.pessoaId = null
      this.editPessoa = false
      this.refreshMapa()
    },


    selecionarDia(dia, index){
      this.dataAtual = dia
    },

    //TODO Somente se dataAtual não estiver na lista de datas da semana. A não ser que force
    getDadosSemanaAtual(){
      var existe = this.contemElemento(this.dataAtual, this.dados.dias)
      if (!existe){
        this.getData(this.dataAtual)
      }
    },

    refreshMapa(){
      this.getData(this.dataAtual)
    },

    contemElemento(obj, list) {
      for (var x in list) {
          if (list[x] === obj) {
              return true;
          }
      }
      return false;
    },

    getDadosHoje(){
      this.dataAtual = petraDateTime.hoje()
    },

    getDadosSemanaAnterior(data){
      this.dataAtual = petraDateTime.semanaAnterior(data)
    },

    getDadosProximaSemana(data){
      this.dataAtual = petraDateTime.semanaSeguinte(data)
    },

    isDataAtual(data){
      return data == this.dataAtual ? true : false
    },

    isIndiceDataAtual(indice){
      return indice == petraDateTime.getIndiceData(this.dataAtual)
    },

    getData(data) {
      var dados = {
        data : data
      }
      petra.axiosPost("/app/hospedagem/mapa", dados)
        .then(response => {
            this.dados = response.data
            console.log(this.dados)
            this.pessoas = response.data.hospedagens
            var cidades = []
            for (var c in this.dados.porCidade){
              var cidade = {
                nome : c, 
                hospedagens : []
              }
              for (var id in this.dados.porCidade[c]){
                const identificador = this.dados.porCidade[c][id]
                var hospedagem = this.getHospedagemById(identificador)
                cidade.hospedagens.push(hospedagem)
               }
              cidades.push(cidade)
            }
            this.cidades = cidades

            this.quadro = response.data.quadro
            
        })
        .catch(error => {

        })
    },

    tableRowClassName({row, rowIndex}) {

      if (row.statusHospedagem == "ABERTA"){
        return 'green-row'
      } else
      if (row.statusHospedagem == "VENCIDA"){
        return 'red-row'
      } 
      return ''
    },
    
    fmtDate(row, col, cellValue, index){
      return petraDateTime.formatDate(cellValue, "DD/MM");
    },


    fmtLeito(row, col){
      return (row.leitoId != 0 ? row.quartoNumero + "-" + row.leitoNumero : "")
    },

    showEstatisticas(){
      var index = petraDateTime.getIndiceData(this.dataAtual) || 0

      if (this.dados && this.dados.qtdLeitosTotais){
        this.qtdLeitosTotais = this.dados.qtdLeitosTotais[index]
        this.qtdLeitosOcupados = this.dados.qtdLeitosOcupados[index]
        this.qtdLeitosLivres = this.dados.qtdLeitosLivres[index]

        this.qtdTotais = this.dados.qtdTotais[index]
        this.qtdVencidos = this.dados.qtdVencidos[index]
        this.qtdPendentes = this.dados.qtdPendentes[index]
        this.qtdEncerrados = this.dados.qtdEncerrados[index]

        this.qtdParciaisTotais = this.dados.qtdParciaisTotais[index]
        this.qtdParciaisVencidos = this.dados.qtdParciaisVencidos[index]
        this.qtdParciaisPendentes = this.dados.qtdParciaisPendentes[index]
        this.qtdParciaisEncerrados = this.dados.qtdParciaisEncerrados[index]
      } else {
        this.qtdLeitosTotais = 0
        this.qtdLeitosOcupados = 0
        this.qtdLeitosLivres = 0

        this.qtdTotais = 0
        this.qtdVencidos = 0
        this.qtdPendentes = 0
        this.qtdEncerrados = 0

        this.qtdParciaisTotais = 0
        this.qtdParciaisVencidos = 0
        this.qtdParciaisPendentes = 0
        this.qtdParciaisEncerrados = 0
      }

    },

    recarregar(){
      this.getDadosSemanaAtual()
    },

    onEncerrada(hospedagemId){
      this.refreshMapa()
    },

    onCloseHospedagemInfo(){
      this.refreshMapa();
    },

    formatDate(data,formato){
      return petraDateTime.formatDate(data,formato)
    },

    diaSemana(dia){
      return petraDateTime.diaSemana(dia)
    },

    quadroClass(dia, quarto, leito){
      var conteudo = this.quadro.quartos[quarto].leitos[leito].dias[this.diaIndex];

      if (conteudo == 1){
        return "thebox-circular teal-darken-2 fonte-branca";  
      }
      return "thebox-circular";
    },

    hospedagemClass(id, classe, dias){
      var hospedagem = this.getHospedagemById(id);

      if (hospedagem){
          if (classe == "BAIXADO"){
            return 'grafico grafico_fim_baixado'
          } else
          if (classe == "INICIO") {
            return 'grafico grafico_inicio'
          } else 
          if (classe == "INICIO_FIM") {
            return 'grafico grafico_inicio grafico_fim'
          } else 
          if (classe == "INICIO_INDO") {
            return 'grafico grafico_inicio_indo' // grafico_indo grafico_inicio
          } else 
          if (classe == "DURANTE") {
            return 'grafico grafico_durante'
          } else 
          if (classe == "FIM") {
            return 'grafico grafico_fim'
          } else
          if (classe == "INDO") {
            return 'grafico grafico_indo'
          } else      
          if (classe == "VINDO") {
            return 'grafico grafico_vindo'
          } else
          if (classe == "INDO_VINDO") {
            return 'grafico grafico_indo grafico_vindo'
          } else
          if (classe == "VINDO_FIM") {
            return 'grafico grafico_vindo grafico_fim'
          }
      }
      return ''
    },  

    colorStatus(id){
      var hospedagem = this.getHospedagemById(id);
      if (hospedagem){
        if (hospedagem.statusHospedagem == 'ABERTA'){
          return '#00796B' // teal darken-2
        } else if (hospedagem.statusHospedagem == 'ENCERRADA'){
          return '#78909C' // blue-grey lighten-1
        } else if (hospedagem.statusHospedagem == 'VENCIDA'){
          return '#D50000' // red accent-4
        } else if (hospedagem.baixado) {
          return '#4DB6AC'
        }
      }
      return 'blue'
    },

    colorStatusItem(status){
      if (status == 'ABERTA'){
        return '#FFF9C4' // teal darken-2
      } else if (status == 'ENCERRADA'){
        return '#d3dce6' //'#E0E0E0' // blue-grey lighten-1
      } else if (status == 'VENCIDA'){
        return '#FFCCBC' // red accent-4
      }
      return 'blue'
    },

    calcularAlturaLeito(index){
      var qtd = 0

      if (this.dados && this.dados.leitos){
        qtd = this.dados.leitos[index].hospedagens.length
      }

      if (qtd <= 1) {
        return '28px'
      } else {
        return  (qtd*28)+'px'
      }
    },

    getHospedagemById(id){
      return _.find(this.dados.hospedagens,{identificador : id});
    },

    getHospedagensByLeitoId(id){
      this.hospedagensQuadro = []

      var obj = _.find(this.dados.leitos,{leitoId : id})
      
      if (!obj) return
      
      this.quadroQuartoNumero = obj.quartoNumero
      this.quadroLeitoNumero = obj.leitoNumero

      //console.log(obj)
      if (obj){
        //console.log("hospedagens")
        for (var h in obj.hospedagens){
          var  dias = obj.hospedagens[h].dias
          //console.log(dias)
          //console.log("O índice é "+this.diaIndex)

          if (dias.length >= 0 && this.diaIndex <= dias.length){
            //console.log(dias[this.diaIndex])
            const identificador = dias[this.diaIndex].identificador

            if (identificador != "0"){
              var hospedagem = this.getHospedagemById(identificador)
              this.hospedagensQuadro.push(hospedagem)
            }
          }
        }
      }
      //console.log(this.hospedagensQuadro)

      return obj
    },

    getNome(id, completo){
      var hospedagem = this.getHospedagemById(id);
      if (hospedagem){
        if (completo)  {
          return hospedagem.pessoaNome
        } else {
          //var nome = hospedagem.pessoaNome.split(" ")[0]
          var nome = hospedagem.pessoaNome
  
          if (nome.length > 10){
            nome = nome.substr(0,10) + "..."
          }
          return nome;
        }
      }
      return '???';
    },

    showHospedagemInfoByIdentificador(id){
      var hospedagem = this.getHospedagemById(id);
      if (hospedagem){
        this.showHospedagemInfo(hospedagem.hospedagemId)
      }
    },

    showHospedagemInfo(id){
      this.state = "info"
      this.hospedagemSelecionada = id;
      this.showTelaHospedagem = true;

      //this.$refs.hospedagemInfo.openDialog(id);
    },

    onCloseInfo(){
      this.state = "browse"
      this.hospedagemSelecionada = null;
      this.$store.dispatch('setAcao','Hospedagens')
      this.refreshMapa()
    },

		setShowDate(d) {
			this.message = `Changing calendar view to ${d.toLocaleDateString()}`
      this.showDate = d
      this.dataAtual = moment(d).format("YYYY-MM-DD")
    },
    
		onDrop(event, date) {
			this.message = `You dropped ${event.id} on ${date.toLocaleDateString()}`
			// Determine the delta between the old start date and the date chosen,
			// and apply that delta to both the start and end date to move the event.
			const eLength = this.dayDiff(event.startDate, date)
			event.originalEvent.startDate = this.addDays(event.startDate, eLength)
			event.originalEvent.endDate = this.addDays(event.endDate, eLength)
		},

    exemplosMoment(){
      /* 

      https://tableless.com.br/trabalhando-com-moment/

      const dia = moment("2018-25-02")
      moment("abcxyz").isValid() // false
      moment("2018-02-24").add(2, "days") // 2018-02-26
      moment("2018-02-24").add(1, "year").subtract("1", "days") // 2019-02-23

      moment().format("dd/MM/yyyy HH-mm") // 25/02/2018 13-35
      moment("abcxyz").format('YYYY MM DD') // "Invalid date"

      moment('2017-10-20').isBefore('2017-10-21'); // true
      moment('2017-10-20').isBefore('2010-12-31', 'year'); // false
      moment('2017-10-20').isBefore('2018-01-01', 'year'); // true

      moment('2010-10-20').isBetween('2010-10-19', '2010-10-25'); // true
      */      
    }    

  }
}
</script>

<style scoped>

  .block-date {
    display:flex;
    margin-left:10px;
    padding-left:4px;
  }

  .el-card__header {
    padding: 5px;
  }

  .el-header {
    line-height: 60px;
  }
  
  .container{
    width:800px;
  }

  .el-col{
    padding-bottom:0px;
  }

  .el-form{
    padding:10px;
  }

:root {
  --margin: 2px;
}

.w15{
  min-width:15px;
  color:red;
}

.fonte-azul{
  color: blue;
}

.fonte-branca{
  color: white;
}

.grade {
  /*padding: 10px;*/
  width: 100%;
}

.container-box {
  display: flex;
  flex-wrap: wrap;
}

.thebox {
  box-sizing: border-box;
  border-radius: 0px;
  margin: 0px;
  height: 30px;
  border: 1px #bdbdbd solid;
}

.thebox-circular {
  box-sizing: border-box;
  border-radius: 25px;
  margin: 0px;
  height: 30px;
  margin-left: 3px;
  margin-right: 3px;
  margin-bottom: 5px;
  padding-top:5px;
  border: 1px #bdbdbd solid;
  font-size: 10pt;
}

.h60 {
  height: 54px;
}

.hleito{
  height:28px;
}

.p0{
  padding:0px;
}

.p1{
  padding: 1px;
}

.p4 {
  padding:4px;
}

.laranja {
  background-color: #FFECB3;
}

.cinza {
  background-color: #d3dce6;
}


.grafico{
  background-color: #E57373;
  margin-left:-1px;
  margin-right:-1px;
  margin-top: 1px;
  height: calc(100% - 2px);
  cursor:pointer;
  padding: 0px;
}

.grafico_inicio {
  border-top-left-radius: 20px;
  border-bottom-left-radius: 20px;
  width: calc(100% - 2px);
  margin-left: 3px;
}

.grafico_fim {
  border-top-right-radius: 20px;
  border-bottom-right-radius: 20px;
  width: calc(100% - 3px);
}

/*  https://css-tricks.com/the-shapes-of-css/ */
.grafico_inicio_indo {
  border-top-left-radius: 20px;
  border-bottom-left-radius: 20px;
  width: calc(100% - 6px);
  margin-left: 3px;

  border-color:#000;
  border-style: dotted;
  border-width: 0px 4px 0px 0px;
}

.grafico_indo {
  border-color:#000;
  border-style: dotted;
  border-width: 0px 4px 0px 0px;
}

.grafico_fim_baixado {
  border-color:#000;
  border-style: solid;
  border-width: 0px 4px 0px 0px;
}

.grafico_vindo {
  border-color:#000;
  border-style: dotted;
  border-width: 0px 0px 0px 4px;
}

.teal-darken-2 {
  background-color: #00796B;
}

.white-text{
    color:white;
}
.amber-lighten-4{
    background-color:#FFECB3;
}
/*
.chip {
  cursor:pointer;
  margin:0px;
  padding:1px;
}
*/
.chip{
  font-size:8pt;
  margin-left:4px;
  background-color:white;
  width:88px;
  text-align:center;
  text-transform:uppercase;
  line-height:1em;
  margin-top:1px;
  height: 10px;
  padding-top:8px;
  padding-bottom: 4px;
  border: 1px solid #bbb;
  border-radius: 16px;
}

.flex-container {
  padding: 0;
  margin: 0;
  list-style: none;
  box-orient: horizontal;
  display: flex;
  justify-content: space-around; /*center*/
}

.wrap    { 
  flex-wrap: wrap;
}  

.wrap li {
  background: gold;
}

.flex-item {
  background: #FFF9C4;
  color: #455A64;
  padding: 2px;
  width: 300px;
  margin: 10px;
}

.subtitulo {
  margin:0 10px;
  padding:5px;
  text-align: center;
  border-radius: 4px;
}

.bg-purple {
  background: #d3dce6;
}


</style>